package com.jt.sort;

/**
 * 非比较类排序：桶排序
 * 桶排序是分配排序的一种
 * 思想：桶排序算法想法类似于散列表。首先要假设待排序的元素输入符合某种均匀分布，例如数据均匀分布在[ 0,1）区间上，则可将此区间划分为10个小区间，称为桶，对散布到同一个桶中的元素再排序。
 * 要求：待排序数长度（即位数）一致。
 * 时间复杂度： 
 * 对N个关键字进行桶排序的时间复杂度分为两个部分： 
 * (1) 循环计算每个关键字的桶映射函数，这个时间复杂度是O(N)。
 * (2) 利用先进的比较排序算法对每个桶内的所有数据进行排序，对于N个待排数据，M个桶，平均每个桶[N/M]个数据，则桶内排序的时间复杂度为 ∑i=1MO(Ni∗logNi)=O(N∗logNM) 为第i个桶的数据量。
 * 因此，平均时间复杂度为线性的O(N+C)，C为桶内排序所花费的时间。当每个桶只有一个数，则最好的时间复杂度为：O(N)。
 * @author maji48
 *
 */
public class BucketSort {
	
	public static void main(String[] args) {
		
	}

}
